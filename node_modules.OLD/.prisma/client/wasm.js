
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.MemorialScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  name: 'name',
  birthDate: 'birthDate',
  deathDate: 'deathDate',
  obituaryNote: 'obituaryNote',
  bio: 'bio',
  imageUrl: 'imageUrl',
  createdAt: 'createdAt'
};

exports.Prisma.CeremonyScalarFieldEnum = {
  id: 'id',
  memorialId: 'memorialId',
  dateTime: 'dateTime',
  venue: 'venue',
  address: 'address',
  mapUrl: 'mapUrl',
  livestream: 'livestream'
};

exports.Prisma.ReceptionScalarFieldEnum = {
  id: 'id',
  memorialId: 'memorialId',
  dateTime: 'dateTime',
  venue: 'venue',
  address: 'address',
  mapUrl: 'mapUrl',
  welcomeScope: 'welcomeScope',
  wishes: 'wishes'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  memorialId: 'memorialId',
  name: 'name',
  email: 'email',
  count: 'count',
  notes: 'notes',
  wantsToSpeak: 'wantsToSpeak',
  relationsJson: 'relationsJson',
  createdAt: 'createdAt'
};

exports.Prisma.MemoryNoteScalarFieldEnum = {
  id: 'id',
  memorialId: 'memorialId',
  author: 'author',
  text: 'text',
  approved: 'approved',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.WelcomeScope = exports.$Enums.WelcomeScope = {
  OPEN: 'OPEN',
  FAMILY: 'FAMILY',
  PRIVATE: 'PRIVATE'
};

exports.Prisma.ModelName = {
  Memorial: 'Memorial',
  Ceremony: 'Ceremony',
  Reception: 'Reception',
  Attendance: 'Attendance',
  MemoryNote: 'MemoryNote'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/eiriksat/dev/etterglod/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/eiriksat/dev/etterglod/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../backend/.env"
  },
  "relativePath": "../../../backend/prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum WelcomeScope {\n  OPEN\n  FAMILY\n  PRIVATE\n}\n\nmodel Memorial {\n  id           Int       @id @default(autoincrement())\n  slug         String    @unique\n  name         String\n  birthDate    DateTime?\n  deathDate    DateTime?\n  obituaryNote String? // f.eks. \"sovnet stille inn ...\"\n  bio          String?\n  imageUrl     String?\n\n  // Seremoni i kirke\n  ceremony Ceremony?\n\n  // Minnestund/resepsjon i annet lokale\n  reception Reception?\n\n  notes       MemoryNote[]\n  attendances Attendance[]\n  createdAt   DateTime     @default(now())\n}\n\nmodel Ceremony {\n  id         Int      @id @default(autoincrement())\n  memorialId Int      @unique\n  dateTime   DateTime\n  venue      String\n  address    String?\n  mapUrl     String?\n  livestream String?\n  Memorial   Memorial @relation(fields: [memorialId], references: [id])\n}\n\nmodel Reception {\n  id           Int          @id @default(autoincrement())\n  memorialId   Int          @unique\n  dateTime     DateTime\n  venue        String\n  address      String?\n  mapUrl       String?\n  welcomeScope WelcomeScope @default(OPEN)\n  wishes       String?\n  Memorial     Memorial     @relation(fields: [memorialId], references: [id])\n}\n\nmodel Attendance {\n  id            Int      @id @default(autoincrement())\n  memorialId    Int\n  name          String\n  email         String\n  count         Int      @default(1)\n  notes         String?\n  wantsToSpeak  Boolean  @default(false)\n  relationsJson String?\n  createdAt     DateTime @default(now())\n  Memorial      Memorial @relation(fields: [memorialId], references: [id])\n\n  @@index([memorialId])\n}\n\nmodel MemoryNote {\n  id         Int      @id @default(autoincrement())\n  memorialId Int\n  author     String\n  text       String\n  approved   Boolean  @default(false)\n  createdAt  DateTime @default(now())\n  Memorial   Memorial @relation(fields: [memorialId], references: [id])\n\n  @@index([memorialId, approved])\n}\n",
  "inlineSchemaHash": "9177cb6a65cbc531c315c6745a905673ea41ec0a97e2ec8deffeeca0946c548c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Memorial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deathDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"obituaryNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ceremony\",\"kind\":\"object\",\"type\":\"Ceremony\",\"relationName\":\"CeremonyToMemorial\"},{\"name\":\"reception\",\"kind\":\"object\",\"type\":\"Reception\",\"relationName\":\"MemorialToReception\"},{\"name\":\"notes\",\"kind\":\"object\",\"type\":\"MemoryNote\",\"relationName\":\"MemorialToMemoryNote\"},{\"name\":\"attendances\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToMemorial\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Ceremony\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memorialId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"venue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mapUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"livestream\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Memorial\",\"kind\":\"object\",\"type\":\"Memorial\",\"relationName\":\"CeremonyToMemorial\"}],\"dbName\":null},\"Reception\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memorialId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"venue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mapUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"welcomeScope\",\"kind\":\"enum\",\"type\":\"WelcomeScope\"},{\"name\":\"wishes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Memorial\",\"kind\":\"object\",\"type\":\"Memorial\",\"relationName\":\"MemorialToReception\"}],\"dbName\":null},\"Attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memorialId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wantsToSpeak\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"relationsJson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Memorial\",\"kind\":\"object\",\"type\":\"Memorial\",\"relationName\":\"AttendanceToMemorial\"}],\"dbName\":null},\"MemoryNote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memorialId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Memorial\",\"kind\":\"object\",\"type\":\"Memorial\",\"relationName\":\"MemorialToMemoryNote\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

